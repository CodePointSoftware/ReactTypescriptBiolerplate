// ------------------------------------------
// Mixins
// ------------------------------------------

@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}

@mixin max-screen($res) {
  @media screen and (max-width: $res) {
    @content;
  }
}

@mixin min-to-max-screen($res, $to-res) {
  @media screen and (min-width: $res) and (max-width: $to-res) {
    @content;
  }
}

@mixin firefox-only() {
  @-moz-document url-prefix() {
    @content;
  }
}

@mixin only-edge() {
  @supports (-ms-ime-align: auto) {
    /* Microsoft EdgeV13&14 CSS styles go here */
    @content;
  }
}

@mixin only-ie11() {
  @media all and (-ms-high-contrast: none) {
    @content;
  }
}

// Transitions
@mixin transition {
  transition-duration: $transition-duration;
  transition-property: $transition-property;
  transition-timing-function: $transition-timing-function;
}

// Linear-interpolation

// Calculate the definition of a line between two points

// @param $map - A Sass map of viewport widths and size value pairs

// @returns A linear equation as a calc() function

// @example

// font-size: linear-interpolation((320px: 18px, 768px: 26px));
// @author Jake Wilson <jake.e.wilson@gmail.com>

@function linear-interpolation($map) {
  $keys: map-keys($map);

  @if (length($keys) != 2) {
    @error 'linear-interpolation() $map must be exactly 2 values';
  }
  // The slope
  $m: (map-get($map, nth($keys, 2)) - map-get($map, nth($keys, 1))) / (nth($keys, 2) - nth($keys, 1));

  // The y-intercept
  $b: map-get($map, nth($keys, 1)) - $m * nth($keys, 1);

  // Determine if the sign should be positive or negative
  $sign: '+';

  @if ($b < 0) {
    $sign: '-';
    $b: abs($b);
  }

  @return calc(#{$m * 100}vw #{$sign} #{$b});
}

@mixin phi-width {
  width: calc(100vw - (100vw / 1.618));
}
